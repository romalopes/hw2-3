version = "1.0-SNAPSHOT"
description = "Home Work of MongoDB course"

// Spock works with Java 1.5 and above
sourceCompatibility = 1.5

repositories {
    mavenCentral()
    mavenLocal()

    // Spock snapshots are available from the Sonatype OSS snapshot repository
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }

}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'war'
//apply plugin: 'tomcat'

/*repositories {
  // Spock releases are available from Maven Central
  mavenCentral()
  // Spock snapshots are available from the Sonatype OSS snapshot repository
  maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
} */

dependencies {
  // mandatory dependencies for using Spock
  groovy "org.codehaus.groovy:groovy-all:2.1.5"
  groovy 'org.apache.ivy:ivy:2.2.0'

  compile 'org.apache.commons:commons-lang3:3.1'

  // spark framework and dependencies
  //compile files('lib/spark-0.9.9.4-SNAPSHOT.jar', 'lib/mongo-2.10.1.jar')
  compile  fileTree(dir: 'lib', include: '*.jar')
  compile 'org.slf4j:slf4j-log4j12:1.6.1'
  compile 'commons-io:commons-io:1.3.2'

  compile 'org.eclipse.jetty:jetty-server:8.1.0.RC5'
  compile 'org.eclipse.jetty:jetty-webapp:8.1.0.RC5'
//


    // other dependencies
    compile 'com.fasterxml.jackson.core:jackson-core:2.1.1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.1.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.1'

    compile 'com.google.guava:guava:13.0.1'
    compile 'com.squareup:dagger:0.9'
    compile 'org.apache.httpcomponents:httpclient:4.2.1'
    compile 'org.freemarker:freemarker:2.3.14'
  //  compile 'org.mongodb:mongo-java-driver:1.3'

    //testCompile 'junit:junit:4.10'

    testCompile 'org.mockito:mockito-all:1.8.4'

    // tomcat plugin
/*    def tomcatVersion = '7.0.11'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
*/
    testCompile "org.spockframework:spock-core:1.0-groovy-2.0-SNAPSHOT"

    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:2.2.2"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:1.2"    // allows mocking of classes without default constructor (together with CGLIB)

    // dependencies used by examples in this project
    testRuntime "com.h2database:h2:1.3.168"
}


task createSourceDirs(description : 'Create empty source directories for all defined sourceSets') << {
        sourceSets*.allSource.srcDirs.flatten().each { File sourceDirectory ->
            if (!sourceDirectory.exists()) {
                println "Making $sourceDirectory"
                sourceDirectory.mkdirs()
            }
        }
    }

    idea {
        project {
            jdkName = '1.7'
            ipr {
                withXml { provider ->
                    provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
                }
            }
        }
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }


    war {
        baseName = 'hw23'
    }

mainClassName = "course.BlogController"
// the remaining configuration is specific to this project, and is not required for using Spock

apply from: "gradle/ide.gradle"

task collectJars(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.testRuntime
}

task wrapper(type: Wrapper) {
  gradleVersion = "1.3"
}


